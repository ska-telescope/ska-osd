openapi: 3.0.0
info:
  title: Observatory Static Data API
  description: 'This OpenAPI document defines the API for the Observatory Static Data (OSD) REST service'
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 1.0.0
servers:
# This default is overwritten when the application is deployed to include the actual namespace if it is different to the 'ska-osd' default
- url: ska-ost-osd/osd/api/v1
paths:
  /osd:
    get:
      summary: Get OSD data filter by the query parameter
      description: |
        Retrieves the OSD cycle_id data which match the query parameters. Also requests without parameters will take
        example and default values and return data based on that. All query parameters has its own validation
        if user provide any invalid value it will return the error message.
      operationId: ska_ost_osd.rest.api.resources.get_osd
      parameters:
        - $ref: '#/components/parameters/cycle_id'
        - $ref: '#/components/parameters/osd_version'
        - $ref: '#/components/parameters/source'
        - $ref: '#/components/parameters/gitlab_branch'
        - $ref: '#/components/parameters/capabilities'
        - $ref: '#/components/parameters/array_assembly'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /semantic_validation:
    post:
      summary: Checks if the Command Input JSON is semantically valid
      description: |
        Validate input json Semantically
        Semantic validation checks the meaning of the input data and ensures that it is valid in the context of the system. It checks whether the input data conforms to the business rules and logic of the system.
      operationId: ska_ost_osd.rest.api.resources.semantically_validate_json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './semantic-validation-openapi-v1.yaml#/components/schemas/SemanticValidationRequest'
      responses:
        '200':
          description: Semantic Validation Successfully
          content:
            application/json:
              schema:
                $ref: './semantic-validation-openapi-v1.yaml#/components/schemas/SemanticValidationSuccessResponse'
        '400':
          description: Bad Request due to semantic validation errors.
          content:
            application/json:
              schema:
                $ref: './semantic-validation-openapi-v1.yaml#/components/schemas/SemanticValidationErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    cycle_id:
      in: query
      name: cycle_id
      schema:
        type: integer
      required: false
      example: 1
    osd_version:
      in: query
      name: osd_version
      schema:
        type: string
      required: false
      example: 1.0.0
    source:
      in: query
      name: source
      schema:
        type: string
        enum: [file, car, gitlab]
        default: file
      required: false
    gitlab_branch:
      in: query
      name: gitlab_branch
      schema:
        type: string
      required: false
    capabilities:
      in: query
      name: capabilities
      schema:
        type: string
        enum: [ mid, low]
        default: mid
      required: false
    array_assembly:
      in: query
      name: array_assembly
      schema:
        type: string
      required: false
      example: AA0.5


  responses:
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad Request, eg validation of against OpenAPI spec failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    BadRequestResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
    ErrorResponse:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        traceback:
          type: object
          properties:
            key:
              type: string
            type:
              type: string
            full_traceback:
              type: string
